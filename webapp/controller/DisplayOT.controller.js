sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/model/json/JSONModel",
	"sap/ui/model/odata/ODataModel",
	"sap/ui/model/odata/v2/ODataModel",
	"sap/ui/core/Fragment",
	"sap/m/MessageToast",
	"sap/m/MessageBox",
	"sap/ui/model/Filter"
], function(Controller, JSONModel, ODataModel, ODataModelv2, Fragment, MessageToast, MessageBox, Filter) {
	"use strict";

	var url = "/sap/opu/odata/sap/ZHCM_OTAPP_SRV";

	var oModel = new ODataModel(url),
		oModelv2 = new ODataModelv2(url),
		jModel = new JSONModel();

	var result = {},
		Pernr = "",
		Mid = "",
		midSelect = "",
		i18nModel = i18nModel,
		stmt = "";

	return Controller.extend("OTApp.controller.DisplayOT", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf OTApp.view.view.DisplayOT
		 */
		onInit: function() {
			this.getView().setModel(oModel);

			oModel.read("/Employee_f4Set", {
				success: function(oData, oResponse) {
					result.Employee_f4Set = oData.results;
					jModel.setData(result);
				},
				error: function(oError) {
					// jQuery.sap.log.info("OData Read Error!!!");
					// MessageToast.show("OData Read Error!!!");
					MessageToast.show(i18nModel.getProperty("Oderr"));
				}
			});
		},
		/**
		 *@memberOf OTApp.controller.DisplayOT
		 */
		getRouter: function() {
			return sap.ui.core.UIComponent.getRouterFor(this);
		},
		/**
		 *@memberOf OTApp.controller.DisplayOT
		 */
		onChngBtn: function() {
			//This code was generated by the layout editor.
			//this is create function
			this.getRouter().getTargets().display("create");
		},
		/**
		 *@memberOf OTApp.controller.DisplayOT
		 */
		onEditBtn: function() {
			//This code was generated by the layout editor.
			//this is the change function
			this.getRouter().getTargets().display("change");
		},
		/**
		 *@memberOf OTApp.controller.DisplayOT
		 */
		onNavBackBtn: function() {
			//This code was generated by the layout editor.
			window.history.go(-1);
		},
		onExit: function() {
			if (this._oDialog) {
				this._oDialog.destroy();
			}
		},
		//  For User Search help
		handleValueHelp: function(oEvent) {
			if (!this._oDialog) {
				this._oDialog = sap.ui.xmlfragment("OTApp.view.User",
					this);
				this.getView().addDependent(this._oDialog);
			}
			this.getView().setModel(jModel);

			// Multi-select if required
			var bMultiSelect = !!oEvent.getSource().data("multi");
			this._oDialog.setMultiSelect(true);
			// Remember selections if required
			var bRemember = !!oEvent.getSource().data("remember");
			this._oDialog.setRememberSelections(bRemember);

			// clear the old search filter
			this._oDialog.getBinding("items").filter([]);

			// var oButton = oEvent.getSource();
			// jQuery.sap.delayedCall(0, this, function() {
			// 	this._oDialog.openBy(oButton);

			// });

			this._oDialog.open();
		},
		_handleValueHelpSearch: function(oEvent) {
			var sValue = oEvent.getParameter("value");
			var oFilter = new sap.ui.model.Filter("Mid", sap.ui.model.FilterOperator.Contains, sValue);
			var oFilter1 = new sap.ui.model.Filter("Uname", sap.ui.model.FilterOperator.Contains, sValue);
			var oFilter2 = new sap.ui.model.Filter("Pernr", sap.ui.model.FilterOperator.Contains, sValue);
			var allfilter = new sap.ui.model.Filter([
				oFilter,
				oFilter1,
				oFilter2
			], false);
			oEvent.getSource().getBinding("items").filter(allfilter);
		},
		_handleValueHelpClose: function(oEvent) {
			var oSelectedItems = oEvent.getParameter("selectedItems"),
				// stmt = "",
				uri = "";
			if (oSelectedItems && oSelectedItems.length) {
				for (var i = 0; i < oSelectedItems.length; i++) {
					var item = oSelectedItems[i],
						context = item.getBindingContext(),
						obj = context.getProperty(null, context);

					var OTemp = $(result.Employee_dataSet).filter(function(i, n) {
						return n.Mid === obj.Mid;
					});
					if (OTemp && OTemp.length === 0) {
						if (i === 0) {
							stmt = obj.Mid;
						} else {
							stmt += "@" + obj.Mid;
						}
					}
				}

			} else {
				var msg = i18nModel.getProperty("SelEmp");
				MessageToast.show(msg);
			}

			oEvent.getSource().getBinding("items").filter([]);
		},
		/**
		 *@memberOf OTApp.controller.DisplayOT
		 */
		OnPressSearch: function() {
			// if (stmt.length) {
			// 	var me = this.
			// 	uri = "/Employee_DispSet?$filter=Mid eq '" + stmt + "'&$expand=EmpSet,OtdetailsSet";
			// 	oModel.read(uri, {
			// 		success: function(oData, oResponse) {
			// 			if (result.Employee_DispSet === undefined) {
			// 				result.Employee_DispSet = [];
			// 			}
			// 			if (result.Employee_DispSet.length === 0) {
			// 				result.Employee_DispSet = oData.results;
			// 			} else {
			// 				for (var j = 0; j < oData.results.length; j++) {
			// 					result.Employee_DispSet.push(oData.results[j]);
			// 				}
			// 			}
			// 			jModel.setData(result);
			// 			me.getView().setModel(jModel);
			// 		},
			// 		error: function(oError) {
			// 			MessageToast.show(i18nModel.getProperty("Oderr"));
			// 		}
			// 	});
			// }
		}
	});
});